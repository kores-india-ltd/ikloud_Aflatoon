@model ikloud_Aflatoon.branchView

@{
    ViewBag.Title = "Create Branch";
    ViewBag.header = "Create Branch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/modernizr-2.8.3.js"></script>
@*<script src="~/Scripts/jquery-3.3.1.min.js"></script>*@
<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script>
    $(document).ready(function () {
        //alert('aila!!')

        $('#IFSCode').keypress(function (e) {

            if ((e.which < 65 || e.which > 122) && (e.which < 48 || e.which > 57)) {
                e.preventDefault();
            }

        });

        $('#BranchCode,#MICRCode').keypress(function (event) {

            if (event.which != 8 && isNaN(String.fromCharCode(event.which))) {
                event.preventDefault(); //stop character from entering input
            }

        });


        $("#BranchName,#Address1,#Address2").keypress(function (event) {
            if (event.shiftKey) {
                event.preventDefault();
            }
            //debugger;
            var vrpay = $(this).val();//document.getElementById("BranchCode").value;

            if (vrpay.length == 0) {
                if (event.charCode == 32) {
                    alert('Blank space are not allowed!');
                    event.preventDefault();
                    return false;
                }
            }

            if (event.keyCode == 190 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 38 || event.keyCode == 39 ||
                        event.keyCode == 40 || event.keyCode == 46 || event.charCode == 32 || (event.charCode > 47 && event.charCode < 58) || (event.charCode > 64 &&
                        event.charCode < 91) || (event.charCode > 95 && event.charCode < 123) || event.charCode == 46 || (event.charCode >= 37 && event.charCode <= 40)) {
            }
            else {
                event.preventDefault();
            }

        });

    });
</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>BranchMaster</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.BranchCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BranchCode)
            @Html.ValidationMessageFor(model => model.BranchCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BranchName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BranchName)
            @Html.ValidationMessageFor(model => model.BranchName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address1)
            @Html.ValidationMessageFor(model => model.Address1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address2)
            @Html.ValidationMessageFor(model => model.Address2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IFSCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IFSCode)
            @Html.ValidationMessageFor(model => model.IFSCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MICRCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MICRCode)
            @Html.ValidationMessageFor(model => model.MICRCode)
        </div>

        <div class="editor-label">
            @Html.Label("Outward Domain")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(x => x.OwDomainId, Model.OwDomainLst)
            @Html.ValidationMessageFor(model => model.OwDomainId)
        </div>

        <div class="editor-label">
            @Html.Label("Inward Domain")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(x => x.IwDomainId, Model.IwDomainLst)
            @Html.ValidationMessageFor(model => model.IwDomainId)
        </div>

        @*<div class="editor-label">
                @Html.LabelFor(model => model.CreationDateTime)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CreationDateTime)
                @Html.ValidationMessageFor(model => model.CreationDateTime)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.CreatedBy)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CreatedBy)
                @Html.ValidationMessageFor(model => model.CreatedBy)
            </div>*@

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {

    }*@
