@model IEnumerable<ikloud_Aflatoon.IwSuspenseQueueViewCM>
@{
    ViewBag.header = "Suspense Queue CM";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Cheques Details";
}


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">

<style type="text/css">

    tr:nth-of-type(2n) {
        background-color: azure;
    }

    tr:nth-of-type(2n-1) {
        background-color: white;
    }


    .truncate-dropdown option {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        display: block;
        max-width: 200px; /* Adjust to fit your layout */
    }
</style>
<script type="text/javascript">
    var RootUrl = '@Url.Content("~/")';
    $(document).ready(function () {



    });

    function showDetails(id) {
        console.log("Id :- " + id);

        $.ajax({
            url: RootUrl + 'IwSuspenseQueue/ShowIwSuspenseQueueDetails',
            //type: 'Post',
            contentType: 'application/json; charset=utf-8',
            dataType: 'JSON',
            data: { id: id },
            //data: JSON.stringify({ dat: sendData }),
            //async: false,
            success: function (data) {

                console.log(data);
                var url = RootUrl + "OWCDKCheckerVerification/SelectionForBatch";
                window.location.href = url;

            }
        });
    }
</script>



<input type="hidden" id="checkermakerhd" value="@Session["CheckerOrMaker_New"].ToString()"/>

<div class="container-fluid">
    <h2>CM Suspense Queue Details</h2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(@Session["CheckerOrMaker_New"].ToString())
    <div class="" style="overflow:auto; max-height:600px;">
        <table class="table table-responsive table-bordered" id="tblDetails">

            @if (Model != null)
            {
                <tr style="background-color:lightblue;">
                    <th>
                        Sr.No.
                    </th>
                    <th>
                        Account No
                    </th>
                    <th>
                        Account Name
                    </th>
                    <th>
                        SOL ID
                    </th>
                    <th>
                        Initial Available Balance
                    </th>
                    <th>
                        Current Available Balance
                    </th>
                    <th>

                        ChequeNo
                    </th>
                    <th>
                        Amount
                    </th>
                    <th>
                        RBI Sequence No
                    </th>
                    <th>
                        CPPS Flag
                    </th>
                    <th>
                        Exception Reason
                    </th>
                    <th>
                        Exception by ID
                    </th>
                    <th>
                        Maker Decision
                    </th>
                    <th>
                        Maker Id
                    </th>
                    <th>Checker Decision</th>
                    <th>Checker Id</th>
                    <th>Expiry Time</th>
                    <th>Status</th>





                    <th>View Image</th>
                </tr>
                int index = 1;
                if (Model.Any())
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @index
                            </td>
                            <td>
                                @Html.HiddenFor(modelItem => item.Id)
                                @Html.DisplayFor(modelItem => item.AccountNumber)
                            </td>
                            @*<td>
                                    @Html.DisplayFor(modelItem => item.AccountName)
                                </td>*@

                            <td>
                                @if (item.AccName != null && item.AccName.Any(x => !string.IsNullOrEmpty(x)))
                                {
                                    @Html.DropDownListFor(
                                        modelItem => item.SelectedAccountName,
                                        new SelectList(item.AccName, "Value", "Text"),
                                        "--Select--",
                                        new { @class = "form-control truncate-dropdown" }
                                    )
                                }
                                else
                                {
                                    @Html.DropDownListFor(
                                        modelItem => item.SelectedAccountName,
                                        new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"),
                                        "No Accounts Available",
                                        new { @class = "form-control truncate-dropdown", disabled = "disabled" }
                                    )
                                }
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.SOLID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InitialAvailableBalance)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CurrentAvailableBalance)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ChequeNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RBISequenceNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CPPS_Flag)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ExceptionReson)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ExceptionID)
                            </td>
                            <td>
                                @if (item.MakerDecision == "2")
                                {
                                    <span style="color: green;">Maker Passed</span>
                                }
                                else if (item.MakerDecision == "3")
                                {
                                    <span style="color: red;">Maker Rejected</span>
                                }

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MakerId)
                            </td>
                            <td>
                                @if (item.CheckerDecision == "5")
                                {
                                    <span style="color: orange;">Checker Return To Maker</span>
                                }
                                else if (item.CheckerDecision == "3")
                                {
                                    <span style="color: red;">Checker Rejected</span>
                                }
                                else if (item.CheckerDecision == "2")
                                {
                                    <span style="color: green;">Checker Passed</span>
                                }

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CheckerId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ExpiryTime)

                            </td>
                            <td>

                                @if (Session["CheckerOrMaker_New"].ToString() == "Maker")
                                {
                                    if (item.CheckerDecision == "2")
                                    {
                                        <span style="color: green;">Checker Passed</span>
                                    }
                                    else if (item.CheckerDecision == "3")
                                    {
                                        <span style="color: red;">Checker Rejected</span>
                                    }
                                    else if (item.CheckerDecision == "5")
                                    {
                                        <span style="color: orange;">Checker Return To Maker</span>
                                    }
                                }
                                else
                                {
                                    if (item.CheckerDecision == "2")
                                    {
                                        <span style="color: green;">Checker Passed</span>
                                    }
                                    else if (item.CheckerDecision == "3")
                                    {
                                        <span style="color: red;">Checker Rejected</span>
                                    }
                                    else if (item.CheckerDecision == "5")
                                    {
                                        <span style="color: orange;">Checker Return To Maker</span>
                                    }
                                }
                            </td>

                            <td>

                                @if (Session["CheckerOrMaker_New"].ToString() == "Maker" || Session["CheckerOrMaker_New"].ToString() == "Checker")
                                {
                                    if (Session["CheckerOrMaker_New"].ToString() == "Maker")
                                    {
                                        if (item.MakerDecision == "" || item.MakerDecision == null || item.CheckerDecision == "5")
                                        {
                                            if (item.CheckerDecision == "5")
                                            {

                                                if (Convert.ToInt32(string.IsNullOrEmpty(item.SQCheckerId) ? "0" : item.SQCheckerId) != (int)Session["uid"])
                                                {
                                                    @Html.ActionLink("View Image", "ShowIwSuspenseQueueDetailsCM", new { id = item.Id })
                                                }
                                            }
                                            else
                                            {

                                                @Html.ActionLink("View Image", "ShowIwSuspenseQueueDetailsCM", new { id = item.Id })
                                            }


                                        }
                                    }
                                    else if (Session["CheckerOrMaker_New"].ToString() == "Checker")
                                    {
                                        <!--here need  condition-->
                                        if (Convert.ToInt32(string.IsNullOrEmpty(item.SQMakerId) ? "0" : item.SQMakerId) != (int)Session["uid"])
                                        {
                                            if (item.MakerDecision == "2" || item.MakerDecision == "3" || item.CheckerDecision == "5")
                                            {

                                                @Html.ActionLink("View Image", "ShowIwSuspenseQueueDetailsCM", new { id = item.Id })
                                            }
                                        }


                                    }

                                }

                                else if (Session["CheckerOrMaker_New"].ToString() == "Checker")
                                {

                                    if (Convert.ToInt32(string.IsNullOrEmpty(item.SQMakerId) ? "0" : item.SQMakerId) != (int)Session["uid"])
                                    {
                                        if (item.MakerDecision == "2" || item.MakerDecision == "3")
                                        {
                                            @Html.ActionLink("View Image", "ShowIwSuspenseQueueDetailsCM", new { id = item.Id })
                                        }

                                    }


                                }


                            </td>
                        </tr>
                        index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="19" style="color:red;text-align:center;">No data found</td>
                    </tr>
                }
            }

        </table>
    </div>
</div>
