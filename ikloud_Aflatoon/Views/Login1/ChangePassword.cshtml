@model ikloud_Aflatoon.Models.changePassword
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>
    ChangePassword
</h2>

<script src="~/Scripts/ChangePswd.js"></script>


@using (Html.BeginForm())
{

    @Html.ValidationSummary(false)
    @Html.AntiForgeryToken()

    // @Html.HiddenFor(m => m.loginUsrid)
    @Html.HiddenFor(m => m.firstlogin)
    @Html.HiddenFor(m => m.UserId)
    @Html.HiddenFor(m => m.policyid)
    @Html.HiddenFor(m => m.minpwdlength)
    @Html.HiddenFor(m => m.maxpwdlength)
    @Html.HiddenFor(m => m.Aplhanumericmadate)
    @Html.HiddenFor(m => m.Specialcharmandate)

    if (Model.succ == 1)
    {
        @*@Html.ActionLink("Click here for login", "Index", "Login")*@
        @Html.ActionLink("Click here for login", "Logout", "Login", new { user = User.Identity.Name, rememberme = false }, null)
    }
    else
    {

        <input type="hidden" name="tempfl" id="tempfl" value="@Model.flg" />
        @*<table id="tt">
            <tr>
              <td class="editor-label">*@
        <div style="width:100%; padding-left:10%;padding-right:10%; text-align: left">
            @*<div>
                    @Html.LabelFor(model => model.UserId)
                </div>

                @* @Html.EditorFor(model => model.UserId, new { @disable = true })
                <div style="text-align: left">
                    @Html.TextBoxFor(model => model.UserId, new { disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.UserId)
                </div>*@
            @* </td>
                </tr>
                <tr>
                 <td class="editor-label">*@
            <div>
                @Html.LabelFor(model => model.OldPassword)
            </div>

            <div style="text-align: left">
                @Html.EditorFor(model => model.OldPassword, new { autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.OldPassword)
            </div>
            @*</td>
                </tr>
                <tr>
                <td class="editor-label">*@
            <div>
                @Html.LabelFor(model => model.NewPassword)
            </div>

            <div style="text-align: left">
                @Html.EditorFor(model => model.NewPassword, new { autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.NewPassword)
            </div>
            @*</td>
                </tr>
                <tr>*@
            <div>
                @Html.LabelFor(model => model.ConfrmPassword)
            </div>
            <div style="text-align: left">
                @Html.EditorFor(model => model.ConfrmPassword, new { autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.ConfrmPassword)
            </div>
        </div>
        <div>
            <p>
            </p>
        </div>
        <div style="width:100%; padding-left:10%;padding-right:10%; text-align: left">
            @*<td>*@<input type="submit" name="btn" id="chan" value="Change" onclick="return(changePassword());" /><!--onclick="return(changePassword());" -->
            &nbsp; &nbsp;
            <input type="submit" name="btn" id="canc" value="Cancel" />@* </td>*@
        </div>
        @* </tr>
            </table>*@
        @* <div style="display: none">
                @Html.Action("PolicyDetails", null, new { id = Model.policyid })
            </div>*@
    }
}

<script type="text/javascript">
    document.getElementById('OldPassword').focus();
</script>
